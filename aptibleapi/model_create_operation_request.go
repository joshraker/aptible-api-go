/*
Deploy API v1

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package aptibleapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOperationRequest{}

// CreateOperationRequest struct for CreateOperationRequest
type CreateOperationRequest struct {
	Type string `json:"type"`
	GitRef *string `json:"git_ref,omitempty"`
	DiskSize *int32 `json:"disk_size,omitempty"`
	ContainerCount *int32 `json:"container_count,omitempty"`
	ContainerSize *int32 `json:"container_size,omitempty"`
	Command *string `json:"command,omitempty"`
	Env *map[string]string `json:"env,omitempty"`
	Handle *string `json:"handle,omitempty"`
	Certificate *string `json:"certificate,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
	DestinationRegion *string `json:"destination_region,omitempty"`
	Interactive *bool `json:"interactive,omitempty"`
	DestinationAccount *string `json:"destination_account,omitempty"`
	DestinationAccountId *int32 `json:"destination_account_id,omitempty"`
	DockerRef *string `json:"docker_ref,omitempty"`
	Automated *bool `json:"automated,omitempty"`
	KeyArn *string `json:"key_arn,omitempty"`
	InstanceProfile *string `json:"instance_profile,omitempty"`
	ProvisionedIops *int32 `json:"provisioned_iops,omitempty"`
	Daily *int32 `json:"daily,omitempty"`
	Monthly *int32 `json:"monthly,omitempty"`
	Yearly *int32 `json:"yearly,omitempty"`
	PitrDays *int32 `json:"pitr_days,omitempty"`
	MakeCopy *bool `json:"make_copy,omitempty"`
	KeepFinal *bool `json:"keep_final,omitempty"`
	EnableBackups *bool `json:"enable_backups,omitempty"`
	EnablePitr *bool `json:"enable_pitr,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateOperationRequest CreateOperationRequest

// NewCreateOperationRequest instantiates a new CreateOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOperationRequest(type_ string) *CreateOperationRequest {
	this := CreateOperationRequest{}
	this.Type = type_
	return &this
}

// NewCreateOperationRequestWithDefaults instantiates a new CreateOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOperationRequestWithDefaults() *CreateOperationRequest {
	this := CreateOperationRequest{}
	return &this
}

// GetType returns the Type field value
func (o *CreateOperationRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateOperationRequest) SetType(v string) {
	o.Type = v
}

// GetGitRef returns the GitRef field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetGitRef() string {
	if o == nil || IsNil(o.GitRef) {
		var ret string
		return ret
	}
	return *o.GitRef
}

// GetGitRefOk returns a tuple with the GitRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetGitRefOk() (*string, bool) {
	if o == nil || IsNil(o.GitRef) {
		return nil, false
	}
	return o.GitRef, true
}

// HasGitRef returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasGitRef() bool {
	if o != nil && !IsNil(o.GitRef) {
		return true
	}

	return false
}

// SetGitRef gets a reference to the given string and assigns it to the GitRef field.
func (o *CreateOperationRequest) SetGitRef(v string) {
	o.GitRef = &v
}

// GetDiskSize returns the DiskSize field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDiskSize() int32 {
	if o == nil || IsNil(o.DiskSize) {
		var ret int32
		return ret
	}
	return *o.DiskSize
}

// GetDiskSizeOk returns a tuple with the DiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDiskSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.DiskSize) {
		return nil, false
	}
	return o.DiskSize, true
}

// HasDiskSize returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDiskSize() bool {
	if o != nil && !IsNil(o.DiskSize) {
		return true
	}

	return false
}

// SetDiskSize gets a reference to the given int32 and assigns it to the DiskSize field.
func (o *CreateOperationRequest) SetDiskSize(v int32) {
	o.DiskSize = &v
}

// GetContainerCount returns the ContainerCount field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetContainerCount() int32 {
	if o == nil || IsNil(o.ContainerCount) {
		var ret int32
		return ret
	}
	return *o.ContainerCount
}

// GetContainerCountOk returns a tuple with the ContainerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetContainerCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ContainerCount) {
		return nil, false
	}
	return o.ContainerCount, true
}

// HasContainerCount returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasContainerCount() bool {
	if o != nil && !IsNil(o.ContainerCount) {
		return true
	}

	return false
}

// SetContainerCount gets a reference to the given int32 and assigns it to the ContainerCount field.
func (o *CreateOperationRequest) SetContainerCount(v int32) {
	o.ContainerCount = &v
}

// GetContainerSize returns the ContainerSize field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetContainerSize() int32 {
	if o == nil || IsNil(o.ContainerSize) {
		var ret int32
		return ret
	}
	return *o.ContainerSize
}

// GetContainerSizeOk returns a tuple with the ContainerSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetContainerSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ContainerSize) {
		return nil, false
	}
	return o.ContainerSize, true
}

// HasContainerSize returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasContainerSize() bool {
	if o != nil && !IsNil(o.ContainerSize) {
		return true
	}

	return false
}

// SetContainerSize gets a reference to the given int32 and assigns it to the ContainerSize field.
func (o *CreateOperationRequest) SetContainerSize(v int32) {
	o.ContainerSize = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetCommand() string {
	if o == nil || IsNil(o.Command) {
		var ret string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetCommandOk() (*string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given string and assigns it to the Command field.
func (o *CreateOperationRequest) SetCommand(v string) {
	o.Command = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetEnv() map[string]string {
	if o == nil || IsNil(o.Env) {
		var ret map[string]string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetEnvOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given map[string]string and assigns it to the Env field.
func (o *CreateOperationRequest) SetEnv(v map[string]string) {
	o.Env = &v
}

// GetHandle returns the Handle field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetHandle() string {
	if o == nil || IsNil(o.Handle) {
		var ret string
		return ret
	}
	return *o.Handle
}

// GetHandleOk returns a tuple with the Handle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetHandleOk() (*string, bool) {
	if o == nil || IsNil(o.Handle) {
		return nil, false
	}
	return o.Handle, true
}

// HasHandle returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasHandle() bool {
	if o != nil && !IsNil(o.Handle) {
		return true
	}

	return false
}

// SetHandle gets a reference to the given string and assigns it to the Handle field.
func (o *CreateOperationRequest) SetHandle(v string) {
	o.Handle = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *CreateOperationRequest) SetCertificate(v string) {
	o.Certificate = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *CreateOperationRequest) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetDestinationRegion returns the DestinationRegion field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDestinationRegion() string {
	if o == nil || IsNil(o.DestinationRegion) {
		var ret string
		return ret
	}
	return *o.DestinationRegion
}

// GetDestinationRegionOk returns a tuple with the DestinationRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDestinationRegionOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationRegion) {
		return nil, false
	}
	return o.DestinationRegion, true
}

// HasDestinationRegion returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDestinationRegion() bool {
	if o != nil && !IsNil(o.DestinationRegion) {
		return true
	}

	return false
}

// SetDestinationRegion gets a reference to the given string and assigns it to the DestinationRegion field.
func (o *CreateOperationRequest) SetDestinationRegion(v string) {
	o.DestinationRegion = &v
}

// GetInteractive returns the Interactive field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetInteractive() bool {
	if o == nil || IsNil(o.Interactive) {
		var ret bool
		return ret
	}
	return *o.Interactive
}

// GetInteractiveOk returns a tuple with the Interactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetInteractiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Interactive) {
		return nil, false
	}
	return o.Interactive, true
}

// HasInteractive returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasInteractive() bool {
	if o != nil && !IsNil(o.Interactive) {
		return true
	}

	return false
}

// SetInteractive gets a reference to the given bool and assigns it to the Interactive field.
func (o *CreateOperationRequest) SetInteractive(v bool) {
	o.Interactive = &v
}

// GetDestinationAccount returns the DestinationAccount field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDestinationAccount() string {
	if o == nil || IsNil(o.DestinationAccount) {
		var ret string
		return ret
	}
	return *o.DestinationAccount
}

// GetDestinationAccountOk returns a tuple with the DestinationAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDestinationAccountOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationAccount) {
		return nil, false
	}
	return o.DestinationAccount, true
}

// HasDestinationAccount returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDestinationAccount() bool {
	if o != nil && !IsNil(o.DestinationAccount) {
		return true
	}

	return false
}

// SetDestinationAccount gets a reference to the given string and assigns it to the DestinationAccount field.
func (o *CreateOperationRequest) SetDestinationAccount(v string) {
	o.DestinationAccount = &v
}

// GetDestinationAccountId returns the DestinationAccountId field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDestinationAccountId() int32 {
	if o == nil || IsNil(o.DestinationAccountId) {
		var ret int32
		return ret
	}
	return *o.DestinationAccountId
}

// GetDestinationAccountIdOk returns a tuple with the DestinationAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDestinationAccountIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DestinationAccountId) {
		return nil, false
	}
	return o.DestinationAccountId, true
}

// HasDestinationAccountId returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDestinationAccountId() bool {
	if o != nil && !IsNil(o.DestinationAccountId) {
		return true
	}

	return false
}

// SetDestinationAccountId gets a reference to the given int32 and assigns it to the DestinationAccountId field.
func (o *CreateOperationRequest) SetDestinationAccountId(v int32) {
	o.DestinationAccountId = &v
}

// GetDockerRef returns the DockerRef field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDockerRef() string {
	if o == nil || IsNil(o.DockerRef) {
		var ret string
		return ret
	}
	return *o.DockerRef
}

// GetDockerRefOk returns a tuple with the DockerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDockerRefOk() (*string, bool) {
	if o == nil || IsNil(o.DockerRef) {
		return nil, false
	}
	return o.DockerRef, true
}

// HasDockerRef returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDockerRef() bool {
	if o != nil && !IsNil(o.DockerRef) {
		return true
	}

	return false
}

// SetDockerRef gets a reference to the given string and assigns it to the DockerRef field.
func (o *CreateOperationRequest) SetDockerRef(v string) {
	o.DockerRef = &v
}

// GetAutomated returns the Automated field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetAutomated() bool {
	if o == nil || IsNil(o.Automated) {
		var ret bool
		return ret
	}
	return *o.Automated
}

// GetAutomatedOk returns a tuple with the Automated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetAutomatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Automated) {
		return nil, false
	}
	return o.Automated, true
}

// HasAutomated returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasAutomated() bool {
	if o != nil && !IsNil(o.Automated) {
		return true
	}

	return false
}

// SetAutomated gets a reference to the given bool and assigns it to the Automated field.
func (o *CreateOperationRequest) SetAutomated(v bool) {
	o.Automated = &v
}

// GetKeyArn returns the KeyArn field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetKeyArn() string {
	if o == nil || IsNil(o.KeyArn) {
		var ret string
		return ret
	}
	return *o.KeyArn
}

// GetKeyArnOk returns a tuple with the KeyArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetKeyArnOk() (*string, bool) {
	if o == nil || IsNil(o.KeyArn) {
		return nil, false
	}
	return o.KeyArn, true
}

// HasKeyArn returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasKeyArn() bool {
	if o != nil && !IsNil(o.KeyArn) {
		return true
	}

	return false
}

// SetKeyArn gets a reference to the given string and assigns it to the KeyArn field.
func (o *CreateOperationRequest) SetKeyArn(v string) {
	o.KeyArn = &v
}

// GetInstanceProfile returns the InstanceProfile field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetInstanceProfile() string {
	if o == nil || IsNil(o.InstanceProfile) {
		var ret string
		return ret
	}
	return *o.InstanceProfile
}

// GetInstanceProfileOk returns a tuple with the InstanceProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetInstanceProfileOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceProfile) {
		return nil, false
	}
	return o.InstanceProfile, true
}

// HasInstanceProfile returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasInstanceProfile() bool {
	if o != nil && !IsNil(o.InstanceProfile) {
		return true
	}

	return false
}

// SetInstanceProfile gets a reference to the given string and assigns it to the InstanceProfile field.
func (o *CreateOperationRequest) SetInstanceProfile(v string) {
	o.InstanceProfile = &v
}

// GetProvisionedIops returns the ProvisionedIops field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetProvisionedIops() int32 {
	if o == nil || IsNil(o.ProvisionedIops) {
		var ret int32
		return ret
	}
	return *o.ProvisionedIops
}

// GetProvisionedIopsOk returns a tuple with the ProvisionedIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetProvisionedIopsOk() (*int32, bool) {
	if o == nil || IsNil(o.ProvisionedIops) {
		return nil, false
	}
	return o.ProvisionedIops, true
}

// HasProvisionedIops returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasProvisionedIops() bool {
	if o != nil && !IsNil(o.ProvisionedIops) {
		return true
	}

	return false
}

// SetProvisionedIops gets a reference to the given int32 and assigns it to the ProvisionedIops field.
func (o *CreateOperationRequest) SetProvisionedIops(v int32) {
	o.ProvisionedIops = &v
}

// GetDaily returns the Daily field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetDaily() int32 {
	if o == nil || IsNil(o.Daily) {
		var ret int32
		return ret
	}
	return *o.Daily
}

// GetDailyOk returns a tuple with the Daily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetDailyOk() (*int32, bool) {
	if o == nil || IsNil(o.Daily) {
		return nil, false
	}
	return o.Daily, true
}

// HasDaily returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasDaily() bool {
	if o != nil && !IsNil(o.Daily) {
		return true
	}

	return false
}

// SetDaily gets a reference to the given int32 and assigns it to the Daily field.
func (o *CreateOperationRequest) SetDaily(v int32) {
	o.Daily = &v
}

// GetMonthly returns the Monthly field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetMonthly() int32 {
	if o == nil || IsNil(o.Monthly) {
		var ret int32
		return ret
	}
	return *o.Monthly
}

// GetMonthlyOk returns a tuple with the Monthly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetMonthlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Monthly) {
		return nil, false
	}
	return o.Monthly, true
}

// HasMonthly returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasMonthly() bool {
	if o != nil && !IsNil(o.Monthly) {
		return true
	}

	return false
}

// SetMonthly gets a reference to the given int32 and assigns it to the Monthly field.
func (o *CreateOperationRequest) SetMonthly(v int32) {
	o.Monthly = &v
}

// GetYearly returns the Yearly field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetYearly() int32 {
	if o == nil || IsNil(o.Yearly) {
		var ret int32
		return ret
	}
	return *o.Yearly
}

// GetYearlyOk returns a tuple with the Yearly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetYearlyOk() (*int32, bool) {
	if o == nil || IsNil(o.Yearly) {
		return nil, false
	}
	return o.Yearly, true
}

// HasYearly returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasYearly() bool {
	if o != nil && !IsNil(o.Yearly) {
		return true
	}

	return false
}

// SetYearly gets a reference to the given int32 and assigns it to the Yearly field.
func (o *CreateOperationRequest) SetYearly(v int32) {
	o.Yearly = &v
}

// GetPitrDays returns the PitrDays field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetPitrDays() int32 {
	if o == nil || IsNil(o.PitrDays) {
		var ret int32
		return ret
	}
	return *o.PitrDays
}

// GetPitrDaysOk returns a tuple with the PitrDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetPitrDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.PitrDays) {
		return nil, false
	}
	return o.PitrDays, true
}

// HasPitrDays returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasPitrDays() bool {
	if o != nil && !IsNil(o.PitrDays) {
		return true
	}

	return false
}

// SetPitrDays gets a reference to the given int32 and assigns it to the PitrDays field.
func (o *CreateOperationRequest) SetPitrDays(v int32) {
	o.PitrDays = &v
}

// GetMakeCopy returns the MakeCopy field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetMakeCopy() bool {
	if o == nil || IsNil(o.MakeCopy) {
		var ret bool
		return ret
	}
	return *o.MakeCopy
}

// GetMakeCopyOk returns a tuple with the MakeCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetMakeCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.MakeCopy) {
		return nil, false
	}
	return o.MakeCopy, true
}

// HasMakeCopy returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasMakeCopy() bool {
	if o != nil && !IsNil(o.MakeCopy) {
		return true
	}

	return false
}

// SetMakeCopy gets a reference to the given bool and assigns it to the MakeCopy field.
func (o *CreateOperationRequest) SetMakeCopy(v bool) {
	o.MakeCopy = &v
}

// GetKeepFinal returns the KeepFinal field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetKeepFinal() bool {
	if o == nil || IsNil(o.KeepFinal) {
		var ret bool
		return ret
	}
	return *o.KeepFinal
}

// GetKeepFinalOk returns a tuple with the KeepFinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetKeepFinalOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepFinal) {
		return nil, false
	}
	return o.KeepFinal, true
}

// HasKeepFinal returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasKeepFinal() bool {
	if o != nil && !IsNil(o.KeepFinal) {
		return true
	}

	return false
}

// SetKeepFinal gets a reference to the given bool and assigns it to the KeepFinal field.
func (o *CreateOperationRequest) SetKeepFinal(v bool) {
	o.KeepFinal = &v
}

// GetEnableBackups returns the EnableBackups field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetEnableBackups() bool {
	if o == nil || IsNil(o.EnableBackups) {
		var ret bool
		return ret
	}
	return *o.EnableBackups
}

// GetEnableBackupsOk returns a tuple with the EnableBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetEnableBackupsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBackups) {
		return nil, false
	}
	return o.EnableBackups, true
}

// HasEnableBackups returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasEnableBackups() bool {
	if o != nil && !IsNil(o.EnableBackups) {
		return true
	}

	return false
}

// SetEnableBackups gets a reference to the given bool and assigns it to the EnableBackups field.
func (o *CreateOperationRequest) SetEnableBackups(v bool) {
	o.EnableBackups = &v
}

// GetEnablePitr returns the EnablePitr field value if set, zero value otherwise.
func (o *CreateOperationRequest) GetEnablePitr() bool {
	if o == nil || IsNil(o.EnablePitr) {
		var ret bool
		return ret
	}
	return *o.EnablePitr
}

// GetEnablePitrOk returns a tuple with the EnablePitr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOperationRequest) GetEnablePitrOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePitr) {
		return nil, false
	}
	return o.EnablePitr, true
}

// HasEnablePitr returns a boolean if a field has been set.
func (o *CreateOperationRequest) HasEnablePitr() bool {
	if o != nil && !IsNil(o.EnablePitr) {
		return true
	}

	return false
}

// SetEnablePitr gets a reference to the given bool and assigns it to the EnablePitr field.
func (o *CreateOperationRequest) SetEnablePitr(v bool) {
	o.EnablePitr = &v
}

func (o CreateOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.GitRef) {
		toSerialize["git_ref"] = o.GitRef
	}
	if !IsNil(o.DiskSize) {
		toSerialize["disk_size"] = o.DiskSize
	}
	if !IsNil(o.ContainerCount) {
		toSerialize["container_count"] = o.ContainerCount
	}
	if !IsNil(o.ContainerSize) {
		toSerialize["container_size"] = o.ContainerSize
	}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Handle) {
		toSerialize["handle"] = o.Handle
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["private_key"] = o.PrivateKey
	}
	if !IsNil(o.DestinationRegion) {
		toSerialize["destination_region"] = o.DestinationRegion
	}
	if !IsNil(o.Interactive) {
		toSerialize["interactive"] = o.Interactive
	}
	if !IsNil(o.DestinationAccount) {
		toSerialize["destination_account"] = o.DestinationAccount
	}
	if !IsNil(o.DestinationAccountId) {
		toSerialize["destination_account_id"] = o.DestinationAccountId
	}
	if !IsNil(o.DockerRef) {
		toSerialize["docker_ref"] = o.DockerRef
	}
	if !IsNil(o.Automated) {
		toSerialize["automated"] = o.Automated
	}
	if !IsNil(o.KeyArn) {
		toSerialize["key_arn"] = o.KeyArn
	}
	if !IsNil(o.InstanceProfile) {
		toSerialize["instance_profile"] = o.InstanceProfile
	}
	if !IsNil(o.ProvisionedIops) {
		toSerialize["provisioned_iops"] = o.ProvisionedIops
	}
	if !IsNil(o.Daily) {
		toSerialize["daily"] = o.Daily
	}
	if !IsNil(o.Monthly) {
		toSerialize["monthly"] = o.Monthly
	}
	if !IsNil(o.Yearly) {
		toSerialize["yearly"] = o.Yearly
	}
	if !IsNil(o.PitrDays) {
		toSerialize["pitr_days"] = o.PitrDays
	}
	if !IsNil(o.MakeCopy) {
		toSerialize["make_copy"] = o.MakeCopy
	}
	if !IsNil(o.KeepFinal) {
		toSerialize["keep_final"] = o.KeepFinal
	}
	if !IsNil(o.EnableBackups) {
		toSerialize["enable_backups"] = o.EnableBackups
	}
	if !IsNil(o.EnablePitr) {
		toSerialize["enable_pitr"] = o.EnablePitr
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOperationRequest := _CreateOperationRequest{}

	err = json.Unmarshal(data, &varCreateOperationRequest)

	if err != nil {
		return err
	}

	*o = CreateOperationRequest(varCreateOperationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "git_ref")
		delete(additionalProperties, "disk_size")
		delete(additionalProperties, "container_count")
		delete(additionalProperties, "container_size")
		delete(additionalProperties, "command")
		delete(additionalProperties, "env")
		delete(additionalProperties, "handle")
		delete(additionalProperties, "certificate")
		delete(additionalProperties, "private_key")
		delete(additionalProperties, "destination_region")
		delete(additionalProperties, "interactive")
		delete(additionalProperties, "destination_account")
		delete(additionalProperties, "destination_account_id")
		delete(additionalProperties, "docker_ref")
		delete(additionalProperties, "automated")
		delete(additionalProperties, "key_arn")
		delete(additionalProperties, "instance_profile")
		delete(additionalProperties, "provisioned_iops")
		delete(additionalProperties, "daily")
		delete(additionalProperties, "monthly")
		delete(additionalProperties, "yearly")
		delete(additionalProperties, "pitr_days")
		delete(additionalProperties, "make_copy")
		delete(additionalProperties, "keep_final")
		delete(additionalProperties, "enable_backups")
		delete(additionalProperties, "enable_pitr")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateOperationRequest struct {
	value *CreateOperationRequest
	isSet bool
}

func (v NullableCreateOperationRequest) Get() *CreateOperationRequest {
	return v.value
}

func (v *NullableCreateOperationRequest) Set(val *CreateOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOperationRequest(val *CreateOperationRequest) *NullableCreateOperationRequest {
	return &NullableCreateOperationRequest{value: val, isSet: true}
}

func (v NullableCreateOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


